*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.21" SourceFile="foxrefgotodef.scx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	*<PropValue>
		DataSource = .NULL.
		Height = 200
		Left = 1
		Name = "Dataenvironment"
		Top = 220
		Width = 520
	*</PropValue>

ENDDEFINE

DEFINE CLASS frmfoxrefgotodef AS cfoxrefform OF "foxctrls.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cmdGoto" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdClose" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdGotoDef" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: getclassmethoddescription
		*m: gotodef
		*m: resizeform
		*m: setfont
		*m: showdetail
		*m: showrightclickmenu
		*m: sortby
		*m: striptabs
		*p: cfontface
		*p: cfontstyle
		*p: nfontsize
		*p: ofoxref
	*</DefinedPropArrayMethod>

	*<PropValue>
		AutoCenter = .T.
		Caption = "Go To Definition"
		cfontface = Tahoma
		cfontstyle = 
		cresourceid = FOXREF
		DoCreate = .T.
		Height = 294
		HelpContextID = 1231105
		LockScreen = .F.
		MaxButton = .F.
		MinButton = .F.
		MinHeight = 200
		MinWidth = 200
		Name = "frmFoxRefGotoDef"
		nfontsize = 8
		ofoxref = .NULL.
		Width = 667
	*</PropValue>

	ADD OBJECT 'cmdClose' AS cfoxbutton WITH ;
		Cancel = .T., ;
		Caption = "Close", ;
		Left = 592, ;
		Name = "cmdClose", ;
		TabIndex = 3, ;
		Top = 31
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdGoto' AS cfoxbutton WITH ;
		Caption = "\<Go To", ;
		Default = .T., ;
		Left = 592, ;
		Name = "cmdGoto", ;
		TabIndex = 2, ;
		Top = 4
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'grdGotoDef' AS cgotodefgrid WITH ;
		AllowCellSelection = .F., ;
		Height = 288, ;
		Highlight = .F., ;
		Left = 4, ;
		Name = "grdGotoDef", ;
		Top = 4, ;
		Width = 581, ;
		colFilename.Header1.Name = "Header1", ;
		colFilename.Name = "colFilename", ;
		colFilename.Text1.Name = "Text1", ;
		colClassMethod.Header1.Name = "Header1", ;
		colClassMethod.Name = "colClassMethod", ;
		colClassMethod.Text1.Name = "Text1", ;
		colCode.Header1.Name = "Header1", ;
		colCode.Name = "colCode", ;
		colCode.Text1.Name = "Text1"
		*< END OBJECT: ClassLib="foxref.vcx" BaseClass="grid" />
	
	PROCEDURE getclassmethoddescription
		#include "foxref.h"
		LOCAL lNoClassProc
		
		IF EOF("SymbolCursor")
			RETURN ''
		ELSE
			m.lNoClassProc = EMPTY(SymbolCursor.ClassName) AND EMPTY(SymbolCursor.ProcName)
			RETURN SymbolCursor.ClassName + IIF(EMPTY(SymbolCursor.ClassName) OR EMPTY(SymbolCursor.ProcName), '', '.') + SymbolCursor.ProcName + IIF(SymbolCursor.ProcLineNo == 0, '', IIF(m.lNoClassProc, '', ", ") + LTRIM(STR(SymbolCursor.ProcLineNo, 8, 0)))
		ENDIF
		
	ENDPROC

	PROCEDURE gotodef
		LOCAL cUniqueID
		
		IF VARTYPE(THIS.oFoxRef) == 'O' AND !EOF("SymbolCursor")
			THIS.oFoxRef.GotoDefinition(SymbolCursor.UniqueID)
		ENDIF
		
	ENDPROC

	PROCEDURE Init
		#include "foxref.h"
		LPARAMETERS oFoxRef, cGotoSymbol
		LOCAL cRefTable, cSetID
		
		SET TALK OFF
		SET DELETED ON
		
		DODEFAULT()
		
		IF VARTYPE(cGotoSymbol) == 'C'
			THIS.Caption = THIS.Caption + ' - ' + m.cGotoSymbol
		ENDIF
		
		* THIS.oBrowser.nBackColor = THIS.BackColor
		* THIS.oBrowser.Write("<p>&nbsp;</p>")
		
		THIS.ResizeForm()
		
		IF VARTYPE(oFoxRef) == 'O'
			THIS.oFoxRef = oFoxRef
		ELSE
			THIS.oFoxRef = NEWOBJECT("FoxRef", "FoxRefEngine.prg")
			THIS.oFoxRef.SetProject()
		ENDIF
		
		THIS.SortBy()  && setup default sorting
		THIS.SetFont()
		
		* display #define's in red
		THIS.grdGotoDef.colFilename.DynamicForeColor = [IIF(SymbolCursor.DefType == ] + DEFTYPE_DEFINE + [, 255, THIS.ForeColor)]
		
	ENDPROC

	PROCEDURE Load
		DODEFAULT()
		
		IF USED("DefinitionCursor")
			SELECT * FROM DefinitionCursor INTO CURSOR SymbolCursor
			
			*ZAP@241120
			SELECT SymbolCursor
			IF INLIST(m.pcSymbol, "IF", "ELSE", "ENDIF")
				LOCATE FOR LineNo = m.pnLineNo
			ENDIF
		ENDIF
		
	ENDPROC

	PROCEDURE Resize
		THIS.ResizeForm()
		
	ENDPROC

	PROCEDURE resizeform
		* Abstract:
		*   Adjust size of the grid control.
		*
		* Parameters:
		*	None
		LOCAL lLockScreen
		
		lLockScreen = THISFORM.LockScreen
		THISFORM.LockScreen = .T.
		
		THIS.cmdGoto.Left      = THIS.Width - THIS.cmdGoto.Width - 5
		THIS.cmdClose.Left     = THIS.cmdGoto.Left
		THIS.grdGotoDef.Width  = THIS.cmdGoto.Left - THIS.grdGotoDef.Left - 5
		THIS.grdGotoDef.Height = THIS.Height - THIS.grdGotoDef.Top - 5
		
		* THIS.MinWidth = THIS.grdGotoDef.Left + 50
		
		THISFORM.LockScreen = lLockScreen
		
	ENDPROC

	PROCEDURE setfont
		* Abstract:
		*   Change the font.
		*
		* Parameters:
		*	None
		LPARAMETERS lGetFont
		LOCAL cFontFace, nFontSize, cStyle
		
		IF lGetFont
			cFontString = GETFONT(THIS.cFontFace, THIS.nFontSize, THIS.cFontStyle)
		ELSE
			cFontString = THIS.oFoxRef.FontString
		ENDIF
		
		IF !EMPTY(cFontString)
			cFontFace  = LEFT(cFontString, AT(",", cFontString) - 1)
			nFontSize  = SUBSTR(cFontString, AT(",", cFontString) + 1)
			nFontSize  = VAL(LEFT(nFontSize, AT(",", nFontSize) - 1))
			cFontStyle = SUBSTR(cFontString, AT("," ,cFontString,2) + 1)
			
			THIS.cFontFace  = cFontFace
			THIS.nFontSize  = nFontSize
			THIS.cFontStyle = cFontStyle
		ENDIF
		
		THIS.grdGotoDef.SetAll("FontName", THIS.cFontFace, "Column")
		THIS.grdGotoDef.SetAll("FontSize", THIS.nFontSize, "Column")
		THIS.grdGotoDef.SetAll("FontBold", 'B'$THIS.cFontStyle, "Column")
		THIS.grdGotoDef.SetAll("FontItalic", 'I'$THIS.cFontStyle, "Column")
		THIS.grdGotoDef.RowHeight = MAX(THIS.nFontSize * 2, 15)
		
		
	ENDPROC

	PROCEDURE showdetail
	ENDPROC

	PROCEDURE showrightclickmenu
	ENDPROC

	PROCEDURE sortby
	ENDPROC

	PROCEDURE striptabs
		#include "foxref.h"
		LPARAMETERS cAbstract
		
		*ZAP@241119
		*m.cAbstract = ALLTRIM(CHRTRAN(RTRIM(m.cAbstract), TAB, ' '))
		
		RETURN LEFT(m.cAbstract, MAX_LINE_LENGTH)
		
		
	ENDPROC

	PROCEDURE cmdClose.Click
		THISFORM.Release()
		
	ENDPROC

	PROCEDURE cmdGoto.Click
		THISFORM.GotoDef()
		
	ENDPROC

ENDDEFINE
