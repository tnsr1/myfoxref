*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.21" SourceFile="foxreffind.scx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*<PropValue>
		DataSource = .NULL.
		Height = 0
		Left = 0
		Name = "Dataenvironment"
		Top = 0
		Width = 0
	*</PropValue>

ENDDEFINE

DEFINE CLASS frmfoxreffind AS cfoxrefform OF "foxctrls.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="shpOptions" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSearch" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblLookFor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboLookFor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblScope" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboScope" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkMatchCase" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkWholeWordsOnly" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblOptions" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboFolder" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblLookIn" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdGetFolder" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSubFolders" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblFileTypes" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboFileTypes" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkOverwrite" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkWildcards" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboComments" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblComments" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkProjectHomeDir" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOptions" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdRegExprMenu" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: addfiletype
		*m: loadscope
		*m: regexprfill
		*m: regexprhelp
		*m: regexprmenu
		*m: search
		*m: updatescope
		*p: lrequeryscope
		*p: ofoxref
		*p: oresultsform
	*</DefinedPropArrayMethod>

	*<PropValue>
		AlwaysOnTop = .T.
		AutoCenter = .T.
		Caption = "Look Up Reference"
		cresourceid = FOXREF
		DataSession = 2
		Desktop = .T.
		DoCreate = .T.
		Height = 233
		HelpContextID = 1231101
		lrequeryscope = .T.
		MaxButton = .F.
		MinButton = .F.
		Name = "frmFoxRefFind"
		ofoxref = .NULL.
		oresultsform = .NULL.
		ShowTips = .T.
		Width = 474
	*</PropValue>

	ADD OBJECT 'cboComments' AS cfoxcombo WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		Height = 21, ;
		Left = 271, ;
		Name = "cboComments", ;
		Style = 2, ;
		TabIndex = 19, ;
		Top = 200, ;
		Width = 129
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboFileTypes' AS cfoxcombo WITH ;
		DisplayCount = 15, ;
		Format = "KT", ;
		Height = 21, ;
		Left = 67, ;
		MaxLength = 254, ;
		Name = "cboFileTypes", ;
		TabIndex = 13, ;
		Top = 130, ;
		Width = 323
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboFolder' AS cfoxcombo WITH ;
		DisplayCount = 10, ;
		Format = "KT", ;
		Height = 21, ;
		Left = 67, ;
		MaxLength = 254, ;
		Name = "cboFolder", ;
		TabIndex = 7, ;
		Top = 59, ;
		Width = 297
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboLookFor' AS cfoxcombo WITH ;
		DisplayCount = 10, ;
		Format = "KT", ;
		Height = 21, ;
		Left = 67, ;
		MaxLength = 254, ;
		Name = "cboLookFor", ;
		TabIndex = 2, ;
		Top = 9, ;
		Width = 297
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboScope' AS cfoxcombo WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		DisabledForeColor = 0,0,0, ;
		Height = 21, ;
		Left = 67, ;
		Name = "cboScope", ;
		Style = 2, ;
		TabIndex = 5, ;
		Top = 34, ;
		Width = 323
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkMatchCase' AS cfoxcheckbox WITH ;
		Caption = "Match \<case", ;
		Height = 17, ;
		Left = 14, ;
		Name = "chkMatchCase", ;
		TabIndex = 15, ;
		Top = 180, ;
		Width = 132
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkOverwrite' AS cfoxcheckbox WITH ;
		Caption = "\<Overwrite prior results", ;
		Height = 17, ;
		Left = 67, ;
		Name = "chkOverwrite", ;
		TabIndex = 11, ;
		Top = 101, ;
		Width = 269
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkProjectHomeDir' AS cfoxcheckbox WITH ;
		Caption = "Limit searc\<h to project home directory and subfolders", ;
		Height = 17, ;
		Left = 67, ;
		Name = "chkProjectHomeDir", ;
		TabIndex = 9, ;
		Top = 83, ;
		Visible = .F., ;
		Width = 295
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSubFolders' AS cfoxcheckbox WITH ;
		Caption = "Searc\<h subfolders", ;
		Height = 17, ;
		Left = 67, ;
		Name = "chkSubFolders", ;
		TabIndex = 10, ;
		Top = 83, ;
		Width = 269
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkWholeWordsOnly' AS cfoxcheckbox WITH ;
		Caption = "Match \<whole word", ;
		Height = 17, ;
		Left = 14, ;
		Name = "chkWholeWordsOnly", ;
		TabIndex = 16, ;
		Top = 202, ;
		Width = 132
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkWildcards' AS cfoxcheckbox WITH ;
		Caption = "\<Use regular expressions", ;
		Height = 17, ;
		Left = 200, ;
		Name = "chkWildcards", ;
		TabIndex = 17, ;
		Top = 180, ;
		Width = 252
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdCancel' AS cfoxbutton WITH ;
		Cancel = .T., ;
		Caption = "Cancel", ;
		Left = 397, ;
		Name = "cmdCancel", ;
		TabIndex = 21, ;
		Top = 36
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdGetFolder' AS cfoxbutton WITH ;
		Caption = "...", ;
		Height = 21, ;
		Left = 368, ;
		Name = "cmdGetFolder", ;
		TabIndex = 8, ;
		Top = 59, ;
		Width = 22
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOptions' AS cfoxbutton WITH ;
		Caption = "Opt\<ions...", ;
		Left = 397, ;
		Name = "cmdOptions", ;
		TabIndex = 22, ;
		Top = 129
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdRegExprMenu' AS cfoxbutton WITH ;
		Caption = "", ;
		Height = 21, ;
		Left = 368, ;
		Name = "cmdRegExprMenu", ;
		Picture = bitmaps\regexprmenu.bmp, ;
		TabIndex = 3, ;
		ToolTipText = "Help on regular expressions", ;
		Top = 9, ;
		Width = 22
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSearch' AS cfoxbutton WITH ;
		Caption = "\<Search", ;
		Default = .T., ;
		Left = 397, ;
		Name = "cmdSearch", ;
		TabIndex = 20, ;
		Top = 9
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblComments' AS cfoxlabel WITH ;
		Caption = "Co\<mments:", ;
		Height = 15, ;
		Left = 200, ;
		Name = "lblComments", ;
		TabIndex = 18, ;
		Top = 204, ;
		Width = 65
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="label" />

	ADD OBJECT 'lblFileTypes' AS cfoxlabel WITH ;
		Caption = "File \<types:", ;
		Height = 15, ;
		Left = 9, ;
		Name = "lblFileTypes", ;
		TabIndex = 12, ;
		Top = 134, ;
		Width = 55
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="label" />

	ADD OBJECT 'lblLookFor' AS cfoxlabel WITH ;
		Caption = "Look \<for:", ;
		Height = 15, ;
		Left = 9, ;
		Name = "lblLookFor", ;
		TabIndex = 1, ;
		Top = 13, ;
		Width = 46
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="label" />

	ADD OBJECT 'lblLookIn' AS cfoxlabel WITH ;
		Caption = "\<Look in:", ;
		Height = 15, ;
		Left = 9, ;
		Name = "lblLookIn", ;
		TabIndex = 6, ;
		Top = 63, ;
		Width = 46
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="label" />

	ADD OBJECT 'lblOptions' AS cfoxlabel WITH ;
		Alignment = 2, ;
		BackStyle = 1, ;
		Caption = "Options", ;
		Height = 15, ;
		Left = 15, ;
		Name = "lblOptions", ;
		Style = 3, ;
		TabIndex = 14, ;
		Top = 162, ;
		Width = 39
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="label" />

	ADD OBJECT 'lblScope' AS cfoxlabel WITH ;
		Caption = "Sco\<pe:", ;
		Height = 15, ;
		Left = 9, ;
		Name = "lblScope", ;
		TabIndex = 4, ;
		Top = 38, ;
		Width = 46
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="label" />

	ADD OBJECT 'shpOptions' AS shape WITH ;
		BackStyle = 0, ;
		Height = 59, ;
		Left = 6, ;
		Name = "shpOptions", ;
		SpecialEffect = 0, ;
		Style = 3, ;
		Top = 169, ;
		Width = 463
		*< END OBJECT: BaseClass="shape" />
	
	PROCEDURE Activate
		DODEFAULT()
		
		IF THIS.lRequeryScope
			THIS.lRequeryScope = .F.
			THIS.LoadScope()
			THIS.UpdateScope()
		ENDIF
		
	ENDPROC

	PROCEDURE addfiletype
		* Abstract:
		*   Add file types to the File Types combo
		*
		* Parameters:
		*	<cFileTypeList> = comma-delimited list of file types
		LPARAMETERS cFileTypeList
		LOCAL i, nCnt
		LOCAL ARRAY aFileTypeList[1]
		
		nCnt = ALINES(aFileTypeList, CHRTRAN(ALLTRIM(cFileTypeList), ',', ';'), ';')
		
		cFileTypeList = ''
		FOR i = 1 TO nCnt
			IF !EMPTY(aFileTypeList[i])
				cFileTypeList = cFileTypeList + IIF(EMPTY(cFileTypeList), '', ';') + aFileTypeList[i]
			ENDIF
		ENDFOR
		
		IF !EMPTY(cFileTypeList)
			* make sure it's not already in our list
			FOR i = 1 TO THIS.cboFileTypes.ListCount
				IF UPPER(RTRIM(THIS.cboFileTypes.ListItem(i, 1))) == UPPER(RTRIM(cFileTypeList))
					RETURN
				ENDIF
			ENDFOR
			THIS.cboFileTypes.AddItem(PADR(cFileTypeList, 100))
		ENDIF
		
	ENDPROC

	PROCEDURE Deactivate
		DODEFAULT()
		
		THIS.lRequeryScope = .T.
		
	ENDPROC

	PROCEDURE Init
		#include "foxref.h"
		LPARAMETERS oFoxRef, cPattern
		LOCAL i
		LOCAL nCnt
		LOCAL nOffset
		LOCAL cProjectPath
		LOCAL lFound
		LOCAL cFileType
		LOCAL lFirstSearch
		LOCAL cStartDir
		
		SET TALK OFF
		
		DODEFAULT()
		
		THIS.BorderStyle = 2  && fixed dialog
		
		IF VARTYPE(oResultsForm) == 'O'
			THIS.oResultsForm = oResultsForm
		ENDIF
		
		IF VARTYPE(oFoxRef) == 'O'
			THIS.oFoxRef = oFoxRef
		ELSE
			THIS.oFoxRef = NEWOBJECT("FoxRef", "FoxRefEngine.prg")
			THIS.oFoxRef.RestorePrefs()
		ENDIF
		
		WITH THIS.cboComments
			.AddItem(COMMENTS_INCLUDE_LOC)
			.AddListItem(TRANSFORM(COMMENTS_INCLUDE), .NewItemID, 2)
		
			.AddItem(COMMENTS_EXCLUDE_LOC)
			.AddListItem(TRANSFORM(COMMENTS_EXCLUDE), .NewItemID, 2)
		
			.AddItem(COMMENTS_ONLY_LOC)
			.AddListItem(TRANSFORM(COMMENTS_ONLY), .NewItemID, 2)
		ENDWITH
		
		* -- Load Look For MRU
		nCnt = ALEN(THIS.oFoxRef.aLookForMRU, 1)
		FOR i = 1 TO nCnt
			IF !EMPTY(THIS.oFoxRef.aLookForMRU[i])
				THIS.cboLookFor.AddItem(IIF(LEFT(THIS.oFoxRef.aLookForMRU[i], 1) == '\', '\', '') + THIS.oFoxRef.aLookForMRU[i])
			ENDIF
		ENDFOR
		IF VARTYPE(cPattern) <> 'C' OR EMPTY(cPattern)
			THIS.cboLookFor.ListIndex = 1
		ELSE
			THIS.cboLookFor.DisplayValue = cPattern
		ENDIF
		
		* -- Load Folder MRU
		* THIS.cboFolder.AddItem(SYS(5) + CURDIR())
		nCnt = ALEN(THIS.oFoxRef.aFolderMRU, 1)
		FOR i = 1 TO nCnt
			IF !EMPTY(THIS.oFoxRef.aFolderMRU[i])
				THIS.cboFolder.AddItem(IIF(LEFT(THIS.oFoxRef.aFolderMRU[i], 1) == '\', '\', '') + THIS.oFoxRef.aFolderMRU[i])
			ENDIF
		ENDFOR
		
		* -- Load Filetypes MRU / common filetypes
		nCnt = ALEN(THIS.oFoxRef.aFileTypesMRU, 1)
		lFirstSearch = .T.
		WITH THIS.cboFileTypes
			IF THIS.oFoxRef.ShowFileTypeHistory
				FOR i = 1 TO nCnt
					IF !EMPTY(THIS.oFoxRef.aFileTypesMRU[i])
						lFirstSearch = .F.
						THIS.AddFileType(THIS.oFoxRef.aFileTypesMRU[i])
					ENDIF
				ENDFOR
				IF .ListCount > 0 AND THIS.oFoxRef.oFileTypeCollection.Count > 0
					.AddItem("\-")
				ENDIF
			ELSE
				* don't show history, but always add in the most recent
				IF !EMPTY(THIS.oFoxRef.aFileTypesMRU[1])
					lFirstSearch = .F.
					THIS.AddFileType(THIS.oFoxRef.aFileTypesMRU[1])
				ENDIF
			ENDIF
		
			* add in our common filetypes that come from FoxRefAddin.dbf
			FOR EACH cFileType IN THIS.oFoxRef.oFileTypeCollection
				THIS.AddFileType(cFileType)
			ENDFOR
		
			.ListIndex = 1
		
			* don't set to "All Files (*.*)" if we've never searched before
			IF lFirstSearch AND STREXTRACT(.List(.ListIndex), '(', ')') == "*.*" AND .ListCount > 1
				.ListIndex = 2
			ENDIF
			IF AT('(', .DisplayValue) > 0
				.DisplayValue = STREXTRACT(.DisplayValue, '(', ')')
			ENDIF
		ENDWITH
		
		
		
		THIS.LoadScope(THIS.oFoxRef.ProjectFile)
		
		IF THIS.oFoxRef.ProjectFile == PROJECT_GLOBAL OR Application.Projects.Count == 0 && OR THIS.cboProject.ListCount == 0
			THIS.cboScope.Value = SCOPE_FOLDER
			IF THIS.cboFolder.ListCount == 0
				m.cStartDir = SYS(5) + CURDIR()
				THIS.cboFolder.AddItem(IIF(LEFT(m.cStartDir, 1) == '\', '\', '') + m.cStartDir)
			ENDIF
		ELSE
			m.lFound = .F.
			cProjectPath = ADDBS(JUSTPATH(THIS.oFoxRef.ProjectFile))
			FOR m.i = 1 TO THIS.cboFolder.ListCount
				IF UPPER(cProjectPath) == UPPER(THIS.cboFolder.List(m.i, 1))
					THIS.cboFolder.ListIndex = m.i
					m.lFound = .T.
					EXIT
				ENDIF
			ENDFOR
			IF !m.lFound
				THIS.cboFolder.AddItem(IIF(LEFT(m.cProjectPath, 1) == '\', '\', '') + cProjectPath)
			ENDIF
		ENDIF
		
		
		THIS.chkSubFolders.Value     = THIS.oFoxRef.SubFolders
		THIS.chkProjectHomeDir.Value = THIS.oFoxRef.ProjectHomeDir
		THIS.chkOverwrite.Value      = THIS.oFoxRef.OverwritePrior
		
		THIS.chkMatchCase.Value      = THIS.oFoxRef.MatchCase
		THIS.chkWholeWordsOnly.Value = THIS.oFoxRef.WholeWordsOnly
		THIS.chkWildcards.Value      = THIS.oFoxRef.Wildcards
		THIS.cboComments.Value       = THIS.oFoxRef.Comments
		
		IF THIS.oFoxRef.FirstSearch()
			THIS.chkOverwrite.Value   = .F.
			THIS.chkOverwrite.Enabled = .F.
		ENDIF
		
		THIS.cmdRegExprMenu.Enabled = THIS.chkWildcards.Value
		THIS.UpdateScope()
		
	ENDPROC

	PROCEDURE loadscope
		* Abstract:
		*   Load up list of available scopes, including open Projects.
		*
		* Parameters:
		*	[cGotoProjName]
		#include "foxref.h"
		LPARAMETERS cGotoProjName
		LOCAL nProjectIndex
		LOCAL nGotoIndex
		LOCAL cFindScope
		LOCAL cProjName
		
		WITH THIS.cboScope
			IF VARTYPE(cGotoProjName) <> 'C' OR EMPTY(cGotoProjName)
				cFindScope = THIS.cboScope.Value
				cGotoProjName = .List(.ListIndex, 3)
			ELSE
				cFindScope = SCOPE_PROJECT
			ENDIF
			m.cGotoProjName = LOWER(m.cGotoProjName)
			
			
			.Clear()
		
			m.nGotoIndex = 1
			FOR nProjectIndex = 1 TO Application.Projects.Count
				m.cProjName = LOWER(Application.Projects(nProjectIndex).Name)
				.AddItem("Entire project - " + LOWER(JUSTFNAME(cProjName)))
				.AddListItem(SCOPE_PROJECT, .NewItemID, 2)
				.AddListItem(IIF(LEFT(m.cProjName, 1) == '\', '\', '') + m.cProjName, .NewItemID, 3)
				IF m.cProjName == m.cGotoProjName AND m.cFindScope == SCOPE_PROJECT
					m.nGotoIndex = .NewIndex
				ENDIF
			ENDFOR
		
			.AddItem(SCOPE_FOLDER_LOC)
			.AddListItem(SCOPE_FOLDER, .NewItemID, 2)
			.AddListItem('', .NewItemID, 3)
			IF SCOPE_FOLDER == m.cFindScope
				m.nGotoIndex = .NewIndex
			ENDIF
		
			.ListIndex = m.nGotoIndex
		ENDWITH
		
	ENDPROC

	PROCEDURE regexprfill
		* Fill the Look For combo with reg expression text
		* passed from the Reg Expr menu
		LPARAMETERS cText
		LOCAL nSelStart
		
		WITH THIS.cboLookFor
			nSelStart = .SelStart
			DO CASE
			CASE .SelLength == 0
				.DisplayValue = LEFT(.DisplayValue, .SelStart) + cText + SUBSTR(.DisplayValue, .SelStart + 1)
				.SelStart = nSelStart + LEN(cText)
		
			CASE .SelLength >= LEN(RTRIM(.DisplayValue))
				.DisplayValue = cText
				.SelStart = LEN(cText)
		
			OTHERWISE
				.DisplayValue = LEFT(.DisplayValue, .SelStart) + cText + RTRIM(SUBSTR(.DisplayValue, .SelStart + .SelLength + 1))
			ENDCASE
		
		ENDWITH
		
	ENDPROC

	PROCEDURE regexprhelp
		#include "foxref.h"
		LOCAL cHelpTopic
		
		*!*	m.cHelpTopic = HELPTOPIC_REGEXPR
		*!*	HELP &cHelpTopic
		
		HELP ID 1231103
		
	ENDPROC

	PROCEDURE regexprmenu
		* Display Regular Expression help menu
		#include "foxref.h"
		LOCAL oTempFoxRef
		LOCAL nRow
		LOCAL nCol
		
		* so that we can use it in our ON SELECTION BAR command
		oTempFoxRef = THISFORM
		
		*!*	THIS.ScaleMode = 0
		*!*	nRow = THISFORM.Top + ((THIS.cmdRegExprMenu.Top + THIS.cmdRegExprMenu.Height - _SCREEN.Top + SYSMETRIC(9) + SYSMETRIC(11)) / FONTMETRIC(1))
		*!*	nCol = THISFORM.Left + THIS.cmdRegExprMenu.Left + THIS.cmdRegExprMenu.Width - _SCREEN.Left + SYSMETRIC(10)
		*!*	THIS.ScaleMode = 3
		nRow = MROW(THIS.Name)
		nCol = MCOL(THIS.Name)
		
		
		DEFINE POPUP shortcut SHORTCUT RELATIVE FROM nRow, nCol IN WINDOW (THIS.Name)
		DEFINE BAR 1 OF shortcut PROMPT REGEXPR_SINGLECHAR_LOC
		DEFINE BAR 2 OF shortcut PROMPT REGEXPR_ZEROORMORE_LOC
		DEFINE BAR 3 OF shortcut PROMPT REGEXPR_ONEORMORE_LOC
		DEFINE BAR 4 OF shortcut PROMPT "\-"
		DEFINE BAR 5 OF shortcut PROMPT REGEXPR_BEGINNINGOFLINE_LOC
		DEFINE BAR 6 OF shortcut PROMPT REGEXPR_ENDOFLINE_LOC
		DEFINE BAR 7 OF shortcut PROMPT REGEXPR_ANYONECHAR_LOC
		DEFINE BAR 8 OF shortcut PROMPT REGEXPR_NOTANYONECHAR_LOC
		DEFINE BAR 9 OF shortcut PROMPT "\-"
		DEFINE BAR 10 OF shortcut PROMPT REGEXPR_OR_LOC
		DEFINE BAR 11 OF shortcut PROMPT REGEXPR_ESCAPE_LOC
		DEFINE BAR 12 OF shortcut PROMPT "\-"
		DEFINE BAR 13 OF shortcut PROMPT REGEXPR_HELP_LOC
		
		
		ON SELECTION BAR 1 OF shortcut oTempFoxRef.RegExprFill('.')
		ON SELECTION BAR 2 OF shortcut oTempFoxRef.RegExprFill('*')
		ON SELECTION BAR 3 OF shortcut oTempFoxRef.RegExprFill('+')
		ON SELECTION BAR 5 OF shortcut oTempFoxRef.RegExprFill('^')
		ON SELECTION BAR 6 OF shortcut oTempFoxRef.RegExprFill('$')
		ON SELECTION BAR 7 OF shortcut oTempFoxRef.RegExprFill("[]")
		ON SELECTION BAR 8 OF shortcut oTempFoxRef.RegExprFill("[^]")
		ON SELECTION BAR 10 OF shortcut oTempFoxRef.RegExprFill('|')
		ON SELECTION BAR 11 OF shortcut oTempFoxRef.RegExprFill("\")
		ON SELECTION BAR 13 OF shortcut oTempFoxRef.RegExprHelp()
		
		ACTIVATE POPUP shortcut
		
		RELEASE POPUPS shortcut
		
		
	ENDPROC

	PROCEDURE search
		* Abstract:
		*   Perform the reference search based upon the options
		*	specified on the dialog.
		*
		* Parameters:
		*	none
		#include "foxpro.h"
		#include "foxref.h"
		LOCAL cPattern AS String
		LOCAL cScope AS String
		LOCAL nMouse
		LOCAL cRefTable
		LOCAL lSuccess
		
		cPattern = THIS.cboLookFor.DisplayValue
		cScope   = THIS.cboScope.Value
		
		IF EMPTY(cPattern)
			* nothing specified to search for
			THIS.cboLookFor.SetFocus()
			RETURN .F.
		ENDIF
		
		IF LEN(cPattern) == 1
			IF MESSAGEBOX(SLOW_WARNING_LOC + CHR(10) + CHR(10) + CONTINUE_LOC, MB_ICONEXCLAMATION + MB_YESNO + MB_DEFBUTTON2, THIS.Caption) == IDNO
				THIS.cboLookFor.SetFocus()
				RETURN .F.
			ENDIF
		ENDIF
		
		
		IF cScope == SCOPE_FOLDER AND !DIRECTORY(THIS.cboFolder.DisplayValue)
			THIS.cboFolder.SetFocus()
			MESSAGEBOX(FOLDERNOEXIST_LOC, MB_ICONEXCLAMATION, THIS.Caption)
			RETURN .F.
		ENDIF
		
		nMouse = THISFORM.MousePointer
		THISFORM.MousePointer = MOUSE_HOURGLASS 
		
		lSuccess = .F.
		WITH THIS.oFoxRef
			.Pattern         = cPattern
			.Comments        = THIS.cboComments.Value
			.MatchCase       = THIS.chkMatchCase.Value
			.WholeWordsOnly  = THIS.chkWholeWordsOnly.Value
			.Wildcards       = THIS.chkWildcards.Value
			.SubFolders      = THIS.chkSubFolders.Value
			.ProjectHomeDir  = THIS.chkProjectHomeDir.Value
			.OverwritePrior  = THIS.chkOverwrite.Value
			.FileTypes       = THIS.cboFileTypes.DisplayValue
			.ProjectFile     = ''
			.FileDirectory   = ''
		
			DO CASE
			CASE cScope == SCOPE_PROJECT
				.ProjectFile = THIS.cboScope.List(THIS.cboScope.ListIndex, 3)
			CASE cScope == SCOPE_FOLDER
				.ProjectFile   = PROJECT_GLOBAL
				.FileDirectory = THIS.cboFolder.DisplayValue
			ENDCASE
		
			lSuccess = .Search(cPattern)
		
			* save prefs to resource file
			.SavePrefs()
		ENDWITH
		
		IF lSuccess
			THIS.oFoxRef.ShowResults()
		ENDIF
		THIS.oFoxRef = .NULL.
		
		
		THISFORM.MousePointer = nMouse 
		
		
	ENDPROC

	PROCEDURE updatescope
		* Abstract:
		*   Called when the Scope combo changes
		*
		* Parameters:
		*	None
		#include "foxref.h"
		LOCAL cScope
		
		cScope = THIS.cboScope.Value
		
		THIS.cboFolder.Enabled         = (cScope == SCOPE_FOLDER)
		THIS.cmdGetFolder.Enabled      = (cScope == SCOPE_FOLDER)
		
		*!*	THIS.cboFolder.Visible    = (cScope == SCOPE_FOLDER)
		*!*	THIS.cmdGetFolder.Visible = (cScope == SCOPE_FOLDER)
		*!*	THIS.lblLookIn.Visible    = (cScope == SCOPE_FOLDER)
		IF cScope == SCOPE_PROJECT
			THIS.cboFolder.DisplayValue = ''
		ENDIF
		
		THIS.chkSubFolders.Visible     = (cScope == SCOPE_FOLDER)
		THIS.chkProjectHomeDir.Visible = (cScope == SCOPE_PROJECT)
		
		IF THIS.cboFolder.Enabled AND EMPTY(THIS.cboFolder.DisplayValue)
			THIS.cboFolder.ListIndex = 1
		ENDIF
		
	ENDPROC

	PROCEDURE cboFileTypes.Click
		IF AT('(', THIS.Value) > 0
			THIS.DisplayValue = STREXTRACT(THIS.Value, "(", ")" )
		ENDIF
		
		
	ENDPROC

	PROCEDURE cboFileTypes.LostFocus
		IF AT('(', THIS.Value) > 0
			THIS.DisplayValue = STREXTRACT(THIS.Value, "(", ")" )
		ENDIF
		
		
	ENDPROC

	PROCEDURE cboScope.GotFocus
		DODEFAULT()
		
		THIS.Parent.lRequeryScope = .F.
		THIS.Parent.LoadScope()
		THIS.Parent.UpdateScope()
		
	ENDPROC

	PROCEDURE cboScope.InteractiveChange
		THIS.Parent.UpdateScope()
	ENDPROC

	PROCEDURE cboScope.MouseDown
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		
		IF THIS.Parent.lRequeryScope
			THIS.Parent.lRequeryScope = .F.
			THIS.Parent.LoadScope()
			THIS.Parent.UpdateScope()
		ENDIF
		
	ENDPROC

	PROCEDURE chkWildcards.InteractiveChange
		THIS.Parent.cmdRegExprMenu.Enabled = THIS.Value
	ENDPROC

	PROCEDURE cmdCancel.Click
		THISFORM.Release()
		
	ENDPROC

	PROCEDURE cmdGetFolder.Click
		LOCAL cFolder
		
		cFolder = GETDIR(THIS.Parent.cboFolder.DisplayValue, '', '', 64 + 1)
		IF !EMPTY(cFolder)
			THIS.Parent.cboFolder.DisplayValue = cFolder
		ENDIF
		
	ENDPROC

	PROCEDURE cmdOptions.Click
		DO FORM FoxRefOptions WITH THISFORM.oFoxRef, .T.
		
	ENDPROC

	PROCEDURE cmdRegExprMenu.Click
		THIS.Parent.RegExprMenu()
		
	ENDPROC

	PROCEDURE cmdSearch.Click
		IF THISFORM.Search()
			THISFORM.Release()
		ENDIF
		
		
	ENDPROC

ENDDEFINE
