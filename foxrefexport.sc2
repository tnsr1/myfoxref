*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.21" SourceFile="foxrefexport.scx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	*<PropValue>
		DataSource = .NULL.
		Height = 0
		Left = 0
		Name = "Dataenvironment"
		Top = 0
		Width = 0
	*</PropValue>

ENDDEFINE

DEFINE CLASS frmfoxrefexport AS cfoxrefform OF "foxctrls.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="opgXMLFormat" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblFileType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblExportTo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboExportType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdGetFolder" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtFilename" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgScope" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cfoxlabel1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboSet" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSet" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkXMLSchema" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkView" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cfoxlabel2" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: doexport
		*m: updatecontrols
		*p: lverifyfile
		*p: ofoxref
	*</DefinedPropArrayMethod>

	*<PropValue>
		AlwaysOnTop = .T.
		AutoCenter = .T.
		Caption = "Export"
		cresourceid = FOXREF
		Desktop = .T.
		DoCreate = .T.
		Height = 214
		MaxButton = .F.
		MinButton = .F.
		Name = "frmFoxRefExport"
		ofoxref = .NULL.
		Width = 424
		WindowType = 1
	*</PropValue>

	ADD OBJECT 'cboExportType' AS cfoxcombo WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		Height = 21, ;
		Left = 92, ;
		Name = "cboExportType", ;
		Style = 2, ;
		TabIndex = 2, ;
		Top = 12, ;
		Width = 240, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboSet' AS cfoxcombo WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		DisplayCount = 15, ;
		Height = 21, ;
		Left = 92, ;
		Name = "cboSet", ;
		Style = 2, ;
		TabIndex = 7, ;
		Top = 68, ;
		Width = 240, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="combobox" />

	ADD OBJECT 'Cfoxlabel1' AS cfoxlabel WITH ;
		Alignment = 2, ;
		BackStyle = 1, ;
		Caption = "Scope", ;
		Height = 15, ;
		Left = 231, ;
		Name = "Cfoxlabel1", ;
		Style = 3, ;
		TabIndex = 12, ;
		Top = 119, ;
		Width = 32, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="label" />

	ADD OBJECT 'Cfoxlabel2' AS cfoxlabel WITH ;
		Alignment = 2, ;
		BackStyle = 1, ;
		Caption = "XML Output Options", ;
		Height = 15, ;
		Left = 18, ;
		Name = "Cfoxlabel2", ;
		Style = 3, ;
		TabIndex = 9, ;
		Top = 119, ;
		Width = 99, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="label" />

	ADD OBJECT 'chkView' AS cfoxcheckbox WITH ;
		Caption = "\<View after export", ;
		Height = 17, ;
		Left = 92, ;
		Name = "chkView", ;
		TabIndex = 8, ;
		Top = 95, ;
		Value = .T., ;
		Width = 192, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkXMLSchema' AS cfoxcheckbox WITH ;
		Caption = "I\<nclude schema", ;
		Height = 17, ;
		Left = 16, ;
		Name = "chkXMLSchema", ;
		TabIndex = 11, ;
		Top = 181, ;
		Width = 175, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdCancel' AS cfoxbutton WITH ;
		Cancel = .T., ;
		Caption = "Cancel", ;
		Left = 344, ;
		Name = "cmdCancel", ;
		TabIndex = 15, ;
		Top = 39, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdGetFolder' AS cfoxbutton WITH ;
		Caption = "...", ;
		Height = 21, ;
		Left = 310, ;
		Name = "cmdGetFolder", ;
		TabIndex = 5, ;
		Top = 40, ;
		Width = 22, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS cfoxbutton WITH ;
		Default = .T., ;
		Left = 344, ;
		Name = "cmdOK", ;
		TabIndex = 14, ;
		Top = 12, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblExportTo' AS cfoxlabel WITH ;
		Caption = "T\<o:", ;
		Height = 15, ;
		Left = 11, ;
		Name = "lblExportTo", ;
		TabIndex = 3, ;
		Top = 44, ;
		Width = 78, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="label" />

	ADD OBJECT 'lblFileType' AS cfoxlabel WITH ;
		Caption = "\<Type:", ;
		Height = 15, ;
		Left = 11, ;
		Name = "lblFileType", ;
		TabIndex = 1, ;
		Top = 16, ;
		Width = 78, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="label" />

	ADD OBJECT 'lblSet' AS cfoxlabel WITH ;
		Caption = "\<Search set:", ;
		Height = 15, ;
		Left = 11, ;
		Name = "lblSet", ;
		TabIndex = 6, ;
		Top = 72, ;
		Width = 78, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="label" />

	ADD OBJECT 'opgScope' AS cfoxoptiongroup WITH ;
		Height = 42, ;
		Left = 221, ;
		Name = "opgScope", ;
		TabIndex = 13, ;
		Top = 126, ;
		Width = 195, ;
		ZOrderSet = 9, ;
		Option1.Caption = "\<All", ;
		Option1.Height = 17, ;
		Option1.Left = 9, ;
		Option1.Name = "Option1", ;
		Option1.Top = 12, ;
		Option1.Width = 38, ;
		Option2.Caption = "Selected \<items only", ;
		Option2.Height = 17, ;
		Option2.Left = 60, ;
		Option2.Name = "Option2", ;
		Option2.Top = 12, ;
		Option2.Width = 118
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'opgXMLFormat' AS cfoxoptiongroup WITH ;
		Height = 83, ;
		Left = 9, ;
		Name = "opgXMLFormat", ;
		TabIndex = 10, ;
		Top = 126, ;
		Width = 204, ;
		ZOrderSet = 1, ;
		Option1.Caption = "\<Generate element-based XML", ;
		Option1.Height = 17, ;
		Option1.Left = 7, ;
		Option1.Name = "Option1", ;
		Option1.Top = 12, ;
		Option1.Width = 172, ;
		Option2.Caption = "G\<enerate attribute-based XML", ;
		Option2.Height = 17, ;
		Option2.Left = 7, ;
		Option2.Name = "Option2", ;
		Option2.Top = 32, ;
		Option2.Width = 172
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'txtFilename' AS cfoxtextbox WITH ;
		Height = 21, ;
		Left = 92, ;
		MaxLength = 255, ;
		Name = "txtFilename", ;
		TabIndex = 4, ;
		Top = 40, ;
		Width = 214, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="foxctrls.vcx" BaseClass="textbox" />
	
	PROCEDURE doexport
		#include "foxpro.h"
		#include "foxref.h"
		LOCAL oError
		LOCAL aFileList[1]
		
		* check if file exists and warn if so
		IF THIS.lVerifyFile
			IF '*' $ THIS.txtFilename.Value OR '?' $ THIS.txtFilename.Value
				THIS.txtFilename.SetFocus()
				MessageBox(FILE_INVALID_LOC, MB_ICONEXCLAMATION, SAVEAS_LOC)
				RETURN
			ENDIF
			
			IF ADIR(aFileList, THIS.txtFilename.Value) > 0
				IF MessageBox(STRTRAN(FILEEXISTS_LOC, "#FILENAME#", THIS.txtFilename.Value), MB_ICONEXCLAMATION + MB_YESNO + MB_DEFBUTTON2, SAVEAS_LOC) == IDNO
					THIS.txtFilename.SetFocus()
					RETURN
				ENDIF
			ENDIF
		ENDIF
		
		THIS.oFoxRef.XMLFormat = THIS.opgXMLFormat.Value
		THIS.oFoxRef.XMLSchema = THIS.chkXMLSchema.Value
		
		IF THIS.oFoxRef.ExportReferences(THIS.cboExportType.Value, THIS.txtFilename.Value, THIS.cboSet.Value, '', '', THIS.opgScope.Value == 2)
			* view the exported file
			IF THIS.chkView.Value AND THIS.cboExportType.Value <> EXPORTTYPE_CLIPBOARD
				IF THIS.cboExportType.Value == EXPORTTYPE_DBF
					* don't shell to a DBF because that will open a new instance of VFP
					TRY
						SET DATASESSION TO 1
						SELECT 0
						USE (THIS.txtFilename.Value) SHARED AGAIN
						BROWSE NORMAL NOWAIT
					CATCH TO oError
						MessageBox(oError.Message, MB_ICONSTOP, APPNAME_LOC)
					FINALLY
						SET DATASESSION TO (THIS.DataSessionID)
					ENDTRY
				ELSE
					THIS.oFoxRef.ShellTo(THIS.txtFilename.Value)
				ENDIF
			ENDIF
		
			* save our options to FoxUser
			IF VARTYPE(THIS.oResourceOptions) == 'O'
				WITH THIS.oResourceOptions
					.Set("ExportType", THIS.cboExportType.Value)
					.Set("View", THIS.chkView.Value)
					.Set("XMLFormat", THIS.opgXMLFormat.Value)
					.Set("XMLSchema", THIS.chkXMLSchema.Value)
					.Set("Scope", THIS.opgScope.Value)
				ENDWITH
			ENDIF
			
			THISFORM.Release()
		ENDIF
		
	ENDPROC

	PROCEDURE Init
		#include "foxref.h"
		LPARAMETERS oFoxRef, cSetID
		LOCAL nCnt, i
		DODEFAULT()
		
		THIS.BorderStyle = 2  && fixed dialog
		
		IF VARTYPE(oFoxRef) == 'O'
			THIS.oFoxRef = oFoxRef
			
			THIS.opgXMLFormat.Value = IIF(THIS.oFoxRef.XMLFormat == XMLFORMAT_ATTRIBUTES, 2, 1)
			THIS.chkXMLSchema.Value = THIS.oFoxRef.XMLSchema
		ENDIF
		
		
		WITH THIS.cboExportType
			.AddItem(EXPORT_DBF_LOC)
			.AddListItem(EXPORTTYPE_DBF, .NewItemID, 2)
		
			.AddItem(EXPORT_TXT_LOC)
			.AddListItem(EXPORTTYPE_TXT, .NewItemID, 2)
		
			.AddItem(EXPORT_XML_LOC)
			.AddListItem(EXPORTTYPE_XML, .NewItemID, 2)
		
			.AddItem(EXPORT_HTML_LOC)
			.AddListItem(EXPORTTYPE_HTML, .NewItemID, 2)
		
			.AddItem(EXPORT_XLS_LOC)
			.AddListItem(EXPORTTYPE_XLS, .NewItemID, 2)
		
			.AddItem(EXPORT_CLIPBOARD_LOC)
			.AddListItem(EXPORTTYPE_CLIPBOARD, .NewItemID, 2)
			
			.ListIndex = 1
		ENDWITH
		
		WITH THIS.cboSet
			.AddItem("<" + ALLRESULTS_LOC + ">")
			.AddListItem('', .NewItemID, 2)
		
			IF !ISNULL(THIS.oFoxRef)
				SELECT Symbol, SetID ;
				 FROM (THIS.oFoxRef.RefTable) ;
				 WHERE RefType == REFTYPE_SEARCH ;
				 INTO ARRAY aSearchSets
				nCnt = _TALLY
				FOR i = 1 TO nCnt
					.AddItem(aSearchSets[i, 1])
					.AddListItem(aSearchSets[i, 2], .NewItemID, 2)
				ENDFOR
			ENDIF
				
			IF VARTYPE(cSetID) == 'C' AND !EMPTY(cSetID)
				.Value = cSetID
			ELSE
				.ListIndex = 1
			ENDIF
			.Enabled = (.ListCount > 1)
		ENDWITH
		
		IF VARTYPE(THIS.oResourceOptions) == 'O'
			WITH THIS.oResourceOptions
				THIS.cboExportType.Value = NVL(.Get("ExportType"), THIS.cboExportType.Value)
				THIS.chkView.Value       = NVL(.Get("View"), THIS.chkView.Value)
				THIS.opgXMLFormat.Value  = NVL(.Get("XMLFormat"), THIS.opgXMLFormat.Value)
				THIS.chkXMLSchema.Value  = NVL(.Get("XMLSchema"), THIS.chkXMLSchema.Value)
				THIS.opgScope.Value      = NVL(.Get("Scope"), THIS.opgScope.Value)
			ENDWITH
		ENDIF
		
		
		THIS.UpdateControls()
		
	ENDPROC

	PROCEDURE updatecontrols
		#include "foxref.h"
		
		IF THIS.cboExportType.Value == EXPORTTYPE_CLIPBOARD
			THIS.txtFilename.Value = ''
			THIS.txtFilename.Enabled = .F.
			THIS.cmdGetFolder.Enabled = .F.
			THIS.chkView.Enabled = .F.
		ELSE
			THIS.txtFilename.Enabled = .T.
			THIS.cmdGetFolder.Enabled = .T.
			THIS.chkView.Enabled = .T.
		ENDIF
		
		IF THIS.cboExportType.Value == EXPORTTYPE_XML
			THIS.opgXMLFormat.Enabled = .T.
			THIS.opgXMLFormat.SetAll("Enabled", .T.)
			THIS.chkXMLSchema.Enabled  = .T.
		ELSE
			THIS.opgXMLFormat.Enabled = .F.
			THIS.opgXMLFormat.SetAll("Enabled", .F.)
			THIS.chkXMLSchema.Enabled  = .F.
		ENDIF
		
		
		THIS.cmdOK.Enabled = !EMPTY(THIS.txtFilename.Value) OR THIS.cboExportType.Value == EXPORTTYPE_CLIPBOARD
		
	ENDPROC

	PROCEDURE cboExportType.InteractiveChange
		THIS.Parent.lVerifyFile = .T.
		THIS.Parent.txtFilename.Value = FORCEEXT(THIS.Parent.txtFilename.Value, THIS.Value)
		
		THISFORM.UpdateControls()
		
	ENDPROC

	PROCEDURE cmdCancel.Click
		THISFORM.Release()
		
	ENDPROC

	PROCEDURE cmdGetFolder.Click
		LOCAL cFilename
		LOCAL cExt
		
		cExt = THIS.Parent.cboExportType.Value
		cFilename = PUTFILE('', THIS.Parent.txtFilename.Value, cExt)
		IF !EMPTY(cFilename)
			THIS.Parent.lVerifyFile = .F.
			THIS.Parent.txtFilename.Value = cFilename
		ENDIF
		THISFORM.UpdateControls()
		
	ENDPROC

	PROCEDURE cmdOK.Click
		THISFORM.DoExport()
	ENDPROC

	PROCEDURE txtFilename.InteractiveChange
		THIS.Parent.lVerifyFile = .T.
		THISFORM.UpdateControls()
		
	ENDPROC

	PROCEDURE txtFilename.LostFocus
		LOCAL cExt
		
		IF !EMPTY(THIS.Value)
			IF EMPTY(JUSTEXT(THIS.Value))
				cExt = THIS.Parent.cboExportType.Value
				THIS.Value = FORCEEXT(THIS.Value, cExt)
			ENDIF
			THIS.Value = FULLPATH(THIS.Value)
		ENDIF
		
	ENDPROC

ENDDEFINE
